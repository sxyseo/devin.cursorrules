import Foundation
import CoreData
#if canImport(UIKit)
import UIKit
#endif

// MARK: - Convenience Methods
extension JournalEntry {
    var content: String {
        get { text ?? "" }
        set { text = newValue }
    }
    
    var moodTypeEnum: MoodType {
        get { MoodType(rawValue: moodType) ?? .neutral }
        set { moodType = newValue.rawValue }
    }
    
    #if canImport(UIKit)
    var uiImage: UIImage? {
        get {
            guard let data = imageData else { return nil }
            return UIImage(data: data)
        }
        set {
            if let image = newValue {
                imageData = image.jpegData(compressionQuality: 0.8)
            } else {
                imageData = nil
            }
        }
    }
    #endif
    
    // Note: fetchRequest is now automatically generated by Core Data
    // static func fetchRequest() -> NSFetchRequest<JournalEntry> {
    //     return NSFetchRequest<JournalEntry>(entityName: "JournalEntry")
    // }
    
    static func create(in context: NSManagedObjectContext) -> JournalEntry {
        let entry = JournalEntry(context: context)
        entry.id = UUID()
        #if canImport(UIKit)
        entry.deviceId = UIDevice.current.identifierForVendor?.uuidString
        #else
        entry.deviceId = "macOS"
        #endif
        entry.lastModified = Date()
        entry.syncStatus = SyncStatus.notSynced.rawValue
        return entry
    }
} 